2007-12-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	* vm/vm_map.h (VM_MAP_COPY_PAGE_LIST_MAX): Increase to 64.

2007-08-20  Samuel Thibault  <samuel.thibault@ens-lyon.org>

	* vm/vm_object.c (vm_object_cached_max): Increase from 200 to 2000.

2005-05-11  Neal H. Walfield  <neal@cs.uml.edu>

	* kern/mach_param.h (THREAD_MAX, TASK_MAX, ACT_MAX,
	ACTPOOL_MAX): Make them 64 times bigger.
	* kern/zalloc.c (zone_map_size): Increase from 12 to 16 MiB.


Index: b/kern/mach_param.h
===================================================================
--- a/kern/mach_param.h
+++ b/kern/mach_param.h
@@ -38,16 +38,16 @@
 #ifndef	_KERN_MACH_PARAM_H_
 #define _KERN_MACH_PARAM_H_
 
-#define THREAD_MAX	1024		/* Max number of threads */
+#define THREAD_MAX	64 * 1024		/* Max number of threads */
 #define THREAD_CHUNK	64		/* Allocation chunk */
 
-#define TASK_MAX	1024		/* Max number of tasks */
+#define TASK_MAX	64 * 1024		/* Max number of tasks */
 #define TASK_CHUNK	64		/* Allocation chunk */
 
-#define ACT_MAX		1024		/* Max number of acts */
+#define ACT_MAX		64 * 1024		/* Max number of acts */
 #define ACT_CHUNK	64		/* Allocation chunk */
 
-#define ACTPOOL_MAX	1024
+#define ACTPOOL_MAX	64 * 1024
 #define ACTPOOL_CHUNK	64
 
 #define PORT_MAX	((TASK_MAX * 3 + THREAD_MAX)	/* kernel */ \
Index: b/kern/zalloc.c
===================================================================
--- a/kern/zalloc.c
+++ b/kern/zalloc.c
@@ -105,7 +105,7 @@ zone_t		zone_zone;	/* this is the zone c
 boolean_t	zone_ignore_overflow = TRUE;
 
 vm_map_t	zone_map = VM_MAP_NULL;
-vm_size_t	zone_map_size = 12 * 1024 * 1024;
+vm_size_t	zone_map_size = 16 * 1024 * 1024;
 
 /*
  *	The VM system gives us an initial chunk of memory.
Index: b/vm/vm_object.c
===================================================================
--- a/vm/vm_object.c
+++ b/vm/vm_object.c
@@ -179,7 +179,7 @@ vm_object_t	kernel_object;
  */
 queue_head_t	vm_object_cached_list;
 int		vm_object_cached_count;
-int		vm_object_cached_max = 200;	/* may be patched*/
+int		vm_object_cached_max = 2000;	/* may be patched*/
 
 decl_simple_lock_data(,vm_object_cached_lock_data)
 
Index: b/vm/vm_map.h
===================================================================
--- a/vm/vm_map.h
+++ b/vm/vm_map.h
@@ -226,7 +226,7 @@ typedef struct vm_map_version {
  *		(returned) and an abort flag (abort if TRUE).
  */
 
-#define VM_MAP_COPY_PAGE_LIST_MAX	8
+#define VM_MAP_COPY_PAGE_LIST_MAX	64
 
 typedef struct vm_map_copy {
 	int			type;
