2005-05-11  Neal H. Walfield  <neal@cs.uml.edu>

	* kern/mach_param.h (THREAD_MAX, TASK_MAX, ACT_MAX,
	ACTPOOL_MAX): Make them 64 times bigger.
	* kern/zalloc.c (zone_map_size): Increase from 12 to 16 MiB.


Index: kern/mach_param.h
===================================================================
--- kern/mach_param.h.orig	2006-10-26 00:16:51.000000000 +0300
+++ kern/mach_param.h	2006-10-26 00:17:13.000000000 +0300
@@ -38,16 +38,16 @@
 #ifndef	_KERN_MACH_PARAM_H_
 #define _KERN_MACH_PARAM_H_
 
-#define THREAD_MAX	1024		/* Max number of threads */
+#define THREAD_MAX	64 * 1024		/* Max number of threads */
 #define THREAD_CHUNK	64		/* Allocation chunk */
 
-#define TASK_MAX	1024		/* Max number of tasks */
+#define TASK_MAX	64 * 1024		/* Max number of tasks */
 #define TASK_CHUNK	64		/* Allocation chunk */
 
-#define ACT_MAX		1024		/* Max number of acts */
+#define ACT_MAX		64 * 1024		/* Max number of acts */
 #define ACT_CHUNK	64		/* Allocation chunk */
 
-#define ACTPOOL_MAX	1024
+#define ACTPOOL_MAX	64 * 1024
 #define ACTPOOL_CHUNK	64
 
 #define PORT_MAX	((TASK_MAX * 3 + THREAD_MAX)	/* kernel */ \
Index: kern/zalloc.c
===================================================================
--- kern/zalloc.c.orig	2006-10-26 00:16:52.000000000 +0300
+++ kern/zalloc.c	2006-10-26 00:17:13.000000000 +0300
@@ -98,7 +98,7 @@ zone_t		zone_zone;	/* this is the zone c
 boolean_t	zone_ignore_overflow = TRUE;
 
 vm_map_t	zone_map = VM_MAP_NULL;
-vm_size_t	zone_map_size = 12 * 1024 * 1024;
+vm_size_t	zone_map_size = 16 * 1024 * 1024;
 
 /*
  *	The VM system gives us an initial chunk of memory.
