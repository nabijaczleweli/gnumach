#DPATCHLEVEL=0

Index: kern/mach_param.h
===================================================================
RCS file: /cvsroot/hurd/gnumach/kern/mach_param.h,v
retrieving revision 1.2
diff -u -r1.2 mach_param.h
--- kern/mach_param.h	5 Apr 2001 06:39:20 -0000	1.2
+++ kern/mach_param.h	3 May 2005 10:06:19 -0000
@@ -38,16 +38,16 @@
 #ifndef	_KERN_MACH_PARAM_H_
 #define _KERN_MACH_PARAM_H_
 
-#define THREAD_MAX	1024		/* Max number of threads */
+#define THREAD_MAX	64 * 1024		/* Max number of threads */
 #define THREAD_CHUNK	64		/* Allocation chunk */
 
-#define TASK_MAX	1024		/* Max number of tasks */
+#define TASK_MAX	64 * 1024		/* Max number of tasks */
 #define TASK_CHUNK	64		/* Allocation chunk */
 
-#define ACT_MAX		1024		/* Max number of acts */
+#define ACT_MAX		64 * 1024		/* Max number of acts */
 #define ACT_CHUNK	64		/* Allocation chunk */
 
-#define ACTPOOL_MAX	1024
+#define ACTPOOL_MAX	64 * 1024
 #define ACTPOOL_CHUNK	64
 
 #define PORT_MAX	((TASK_MAX * 3 + THREAD_MAX)	/* kernel */ \
Index: zalloc.c
===================================================================
RCS file: /cvsroot/hurd/gnumach/kern/zalloc.c,v
retrieving revision 1.3
diff -u -p -r1.3 zalloc.c
--- zalloc.c	5 Apr 2001 06:39:20 -0000	1.3
+++ zalloc.c	11 May 2005 09:35:43 -0000
@@ -99,7 +99,7 @@ zone_t		zone_zone;	/* this is the zone c
 boolean_t	zone_ignore_overflow = TRUE;
 
 vm_map_t	zone_map = VM_MAP_NULL;
-vm_size_t	zone_map_size = 12 * 1024 * 1024;
+vm_size_t	zone_map_size = 18 * 1024 * 1024;
 
 /*
  *	The VM system gives us an initial chunk of memory.
