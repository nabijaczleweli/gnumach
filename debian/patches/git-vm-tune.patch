commit ed32cdc81be98287e4678bdb4a71a578b548580d
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sat Aug 30 12:48:44 2014 +0200

    Bump NR_GRANT_PAGES
    
    This has shown needed on buildds with several disks and network
    interfaces.
    
    * xen/grant.c (NR_GRANT_PAGES): Increase from 4 to 8.

--- a/xen/grant.c
+++ b/xen/grant.c
@@ -25,7 +25,7 @@
 #include "grant.h"
 
 #define NR_RESERVED_ENTRIES 8
-#define NR_GRANT_PAGES 4
+#define NR_GRANT_PAGES 8
 
 decl_simple_lock_data(static,lock);
 static struct grant_entry *grants;
--- a/vm/vm_pageout.c
+++ b/vm/vm_pageout.c
@@ -98,7 +98,7 @@
  */
 
 #ifndef	VM_PAGE_FREE_TARGET
-#define	VM_PAGE_FREE_TARGET(free)	(15 + (free) / 80)
+#define	VM_PAGE_FREE_TARGET(free)	(150 + (free) * 10 / 100)
 #endif	/* VM_PAGE_FREE_TARGET */
 
 /*
@@ -107,7 +107,7 @@
  */
 
 #ifndef	VM_PAGE_FREE_MIN
-#define	VM_PAGE_FREE_MIN(free)	(10 + (free) / 100)
+#define	VM_PAGE_FREE_MIN(free)	(100 + (free) * 8 / 100)
 #endif	/* VM_PAGE_FREE_MIN */
 
 /*      When vm_page_external_count exceeds vm_page_external_limit, 
@@ -133,7 +133,7 @@
  *	operation by dipping into the reserved pool of pages.  */
 
 #ifndef	VM_PAGE_FREE_RESERVED
-#define	VM_PAGE_FREE_RESERVED			50
+#define	VM_PAGE_FREE_RESERVED			500
 #endif	/* VM_PAGE_FREE_RESERVED */
 
 /*
@@ -145,7 +145,7 @@
  */
 
 #ifndef	VM_PAGEOUT_RESERVED_INTERNAL
-#define	VM_PAGEOUT_RESERVED_INTERNAL(reserve)	((reserve) - 25)
+#define	VM_PAGEOUT_RESERVED_INTERNAL(reserve)	((reserve) - 250)
 #endif	/* VM_PAGEOUT_RESERVED_INTERNAL */
 
 /*
@@ -157,7 +157,7 @@
  */
 
 #ifndef	VM_PAGEOUT_RESERVED_REALLY
-#define	VM_PAGEOUT_RESERVED_REALLY(reserve)	((reserve) - 40)
+#define	VM_PAGEOUT_RESERVED_REALLY(reserve)	((reserve) - 400)
 #endif	/* VM_PAGEOUT_RESERVED_REALLY */
 
 extern void vm_pageout_continue();
@@ -916,6 +916,7 @@ void vm_pageout()
 
 	current_thread()->vm_privilege = TRUE;
 	stack_privilege(current_thread());
+	thread_set_own_priority(0);
 
 	/*
 	 *	Initialize some paging parameters.
