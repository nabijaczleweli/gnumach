commit 32b5d3ceb7a120b76f10f69afb6acbf453a76bbc
Author: Justus Winter <4winter@informatik.uni-hamburg.de>
Date:   Wed Apr 30 13:52:47 2014 +0200

    include: do not guard the host_slab_info RPC with MACH_VM_DEBUG
    
    Previously, the definition of the host_slab_info RPC was guarded with
    MACH_VM_DEBUG, even though it is not at all concerned with the VM
    subsystem.  Furthermore, there was no "skip" directive for
    host_slab_info.
    
    The function host_slab_info is guarded with MACH_DEBUG.  The server
    for the RPCs in mach_debug.defs is only used if MACH_DEBUG is
    defined. There is no need to guard host_slab_info.
    
    * include/mach_debug/mach_debug.defs (host_slab_info): Unconditionally
    include the RPC.

diff --git a/include/mach_debug/mach_debug.defs b/include/mach_debug/mach_debug.defs
index 053c3fe..fb6e3a9 100644
--- a/include/mach_debug/mach_debug.defs
+++ b/include/mach_debug/mach_debug.defs
@@ -218,6 +218,12 @@ routine mach_vm_object_pages(
 	out	pages		: vm_page_info_array_t,
 					CountInOut, Dealloc);
 
+#else	/* !defined(MACH_VM_DEBUG) || MACH_VM_DEBUG */
+skip;	/* mach_vm_region_info */
+skip;	/* mach_vm_object_info */
+skip;	/* mach_vm_object_pages */
+#endif	/* !defined(MACH_VM_DEBUG) || MACH_VM_DEBUG */
+
 /*
  *	Returns information about the memory allocation caches.
  */
@@ -225,9 +231,3 @@ routine host_slab_info(
 		host		: host_t;
 	out	info		: cache_info_array_t,
 					CountInOut, Dealloc);
-
-#else	/* !defined(MACH_VM_DEBUG) || MACH_VM_DEBUG */
-skip;	/* mach_vm_region_info */
-skip;	/* mach_vm_object_info */
-skip;	/* mach_vm_object_pages */
-#endif	/* !defined(MACH_VM_DEBUG) || MACH_VM_DEBUG */
